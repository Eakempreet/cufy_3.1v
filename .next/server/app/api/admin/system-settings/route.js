"use strict";(()=>{var e={};e.id=4193,e.ids=[4193],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},63477:e=>{e.exports=require("querystring")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},95867:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>q,originalPathname:()=>j,requestAsyncStorage:()=>y,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>_,staticGenerationBailout:()=>x});var s={};r.r(s),r.d(s,{GET:()=>g,POST:()=>c,PUT:()=>d}),r(95655);var n=r(83323),i=r(54647),a=r(66886),o=r(3471),u=r(69542),l=r(93439);async function g(e){try{let{data:e,error:t}=await l.p.from("system_settings").select("*").order("setting_key");if(t)return console.error("Error fetching system settings:",t),a.Z.json({error:"Failed to fetch settings"},{status:500});let r=e.reduce((e,t)=>(e[t.setting_key]=t.setting_value,e),{});return a.Z.json({success:!0,settings:r,raw_settings:e})}catch(e){return console.error("System settings GET error:",e),a.Z.json({error:"Internal server error"},{status:500})}}async function d(e){try{let t=await (0,o.getServerSession)(u.L);if(!t?.user?.email)return a.Z.json({error:"Unauthorized"},{status:401});let{data:r}=await l.p.from("users").select("is_admin").eq("email",t.user.email).single();if(!r?.is_admin)return a.Z.json({error:"Admin access required"},{status:403});let{setting_key:s,setting_value:n,description:i}=await e.json();if(!s||void 0===n)return a.Z.json({error:"setting_key and setting_value are required"},{status:400});let{data:g,error:d}=await l.p.from("system_settings").update({setting_value:n,description:i||null,updated_by:t.user.email,updated_at:new Date().toISOString()}).eq("setting_key",s).select();if(d)return console.error("Error updating system setting:",d),a.Z.json({error:"Failed to update setting"},{status:500});let c=g;if(!g||0===g.length){let{data:e,error:r}=await l.p.from("system_settings").insert({setting_key:s,setting_value:n,description:i||null,updated_by:t.user.email}).select().single();if(r)return console.error("Error inserting system setting:",r),a.Z.json({error:"Failed to create setting"},{status:500});c=[e]}return a.Z.json({success:!0,setting:c[0],message:`Setting '${s}' updated successfully`})}catch(e){return console.error("System settings PUT error:",e),a.Z.json({error:"Internal server error"},{status:500})}}async function c(e){try{let t=await (0,o.getServerSession)(u.L);if(!t?.user?.email)return a.Z.json({error:"Unauthorized"},{status:401});let{data:r}=await l.p.from("users").select("is_admin").eq("email",t.user.email).single();if(!r?.is_admin)return a.Z.json({error:"Admin access required"},{status:403});let{action:s,setting_key:n,setting_value:i}=await e.json();if("toggle_boys_registration"===s){let{data:e}=await l.p.from("system_settings").select("setting_value").eq("setting_key","boys_registration_enabled").single(),r=e?.setting_value!==!0,{data:s,error:n}=await l.p.from("system_settings").update({setting_value:r,updated_by:t.user.email,updated_at:new Date().toISOString()}).eq("setting_key","boys_registration_enabled").select().single();if(n)return console.error("Error toggling boys registration:",n),a.Z.json({error:"Failed to toggle setting"},{status:500});return a.Z.json({success:!0,setting:s,message:`Boys registration ${r?"enabled":"disabled"}`,new_value:r})}if("update_message"===s){let{data:e,error:r}=await l.p.from("system_settings").update({setting_value:i,updated_by:t.user.email,updated_at:new Date().toISOString()}).eq("setting_key","boys_registration_message").select().single();if(r)return console.error("Error updating boys registration message:",r),a.Z.json({error:"Failed to update message"},{status:500});return a.Z.json({success:!0,setting:e,message:"Boys registration message updated successfully"})}return a.Z.json({error:"Invalid action"},{status:400})}catch(e){return console.error("System settings POST error:",e),a.Z.json({error:"Internal server error"},{status:500})}}let p=n.AppRouteRouteModule,m=new p({definition:{kind:i.x.APP_ROUTE,page:"/api/admin/system-settings/route",pathname:"/api/admin/system-settings",filename:"route",bundlePath:"app/api/admin/system-settings/route"},resolvedPagePath:"/home/aman/Desktop/cufy_3.1v-1/app/api/admin/system-settings/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:y,staticGenerationAsyncStorage:_,serverHooks:f,headerHooks:q,staticGenerationBailout:x}=m,j="/api/admin/system-settings/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9195,5020,6886,3433,3810,3471,7221,4901,9542],()=>r(95867));module.exports=s})();