/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/admin/matches/route";
exports.ids = ["app/api/admin/matches/route"];
exports.modules = {

/***/ "(ssr)/./node_modules/@supabase/realtime-js/dist/main sync recursive":
/*!************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/main/ sync ***!
  \************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(ssr)/./node_modules/@supabase/realtime-js/dist/main sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmatches%2Froute&page=%2Fapi%2Fadmin%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmatches%2Froute.ts&appDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmatches%2Froute&page=%2Fapi%2Fadmin%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmatches%2Froute.ts&appDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _home_aman_Desktop_cufy_3_1v_1_app_api_admin_matches_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/admin/matches/route.ts */ \"(rsc)/./app/api/admin/matches/route.ts\");\n\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst AppRouteRouteModule = next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule;\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/admin/matches/route\",\n        pathname: \"/api/admin/matches\",\n        filename: \"route\",\n        bundlePath: \"app/api/admin/matches/route\"\n    },\n    resolvedPagePath: \"/home/aman/Desktop/cufy_3.1v-1/app/api/admin/matches/route.ts\",\n    nextConfigOutput,\n    userland: _home_aman_Desktop_cufy_3_1v_1_app_api_admin_matches_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/admin/matches/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhZG1pbiUyRm1hdGNoZXMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFkbWluJTJGbWF0Y2hlcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFkbWluJTJGbWF0Y2hlcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGYW1hbiUyRkRlc2t0b3AlMkZjdWZ5XzMuMXYtMSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGaG9tZSUyRmFtYW4lMkZEZXNrdG9wJTJGY3VmeV8zLjF2LTEmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0Q7QUFDaEQ7QUFDMEY7QUFDM0I7QUFDL0Q7QUFDMEY7QUFDMUYsNEJBQTRCLGdIQUEwQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvPzY4ODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnNcIjtcbi8vIEB0cy1pZ25vcmUgdGhpcyBuZWVkIHRvIGJlIGltcG9ydGVkIGZyb20gbmV4dC9kaXN0IHRvIGJlIGV4dGVybmFsXG5pbXBvcnQgKiBhcyBtb2R1bGUgZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbi8vIEB0cy1leHBlY3QtZXJyb3IgLSByZXBsYWNlZCBieSB3ZWJwYWNrL3R1cmJvcGFjayBsb2FkZXJcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvaG9tZS9hbWFuL0Rlc2t0b3AvY3VmeV8zLjF2LTEvYXBwL2FwaS9hZG1pbi9tYXRjaGVzL3JvdXRlLnRzXCI7XG5jb25zdCBBcHBSb3V0ZVJvdXRlTW9kdWxlID0gbW9kdWxlLkFwcFJvdXRlUm91dGVNb2R1bGU7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hZG1pbi9tYXRjaGVzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vbWF0Y2hlc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYWRtaW4vbWF0Y2hlcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9ob21lL2FtYW4vRGVza3RvcC9jdWZ5XzMuMXYtMS9hcHAvYXBpL2FkbWluL21hdGNoZXMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYWRtaW4vbWF0Y2hlcy9yb3V0ZVwiO1xuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmatches%2Froute&page=%2Fapi%2Fadmin%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmatches%2Froute.ts&appDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/admin/matches/route.ts":
/*!****************************************!*\
  !*** ./app/api/admin/matches/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic),\n/* harmony export */   revalidate: () => (/* binding */ revalidate)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.ts\");\n\n\nconst dynamic = \"force-dynamic\";\nconst revalidate = 0;\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const planType = searchParams.get(\"planType\") // 'premium' or 'basic'\n        ;\n        console.log(\"Fetching matches data for plan:\", planType);\n        // Get male users with confirmed payments for the specified plan\n        let query = _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").select(`\n        id,\n        full_name,\n        email,\n        gender,\n        age,\n        university,\n        profile_photo,\n        subscription_type,\n        payment_confirmed,\n        current_round,\n        round_1_completed,\n        round_2_completed,\n        decision_timer_active,\n        decision_timer_expires_at,\n        decision_timer_started_at,\n        temp_match_id,\n        permanent_match_id,\n        match_confirmed_at,\n        last_activity_at,\n        created_at\n      `).eq(\"gender\", \"male\").eq(\"payment_confirmed\", true);\n        if (planType && planType !== \"all\") {\n            query = query.eq(\"subscription_type\", planType);\n        }\n        const { data: maleUsers, error: maleUsersError } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (maleUsersError) {\n            console.error(\"Error fetching male users:\", maleUsersError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to fetch male users\"\n            }, {\n                status: 500\n            });\n        }\n        // Get all female users for assignment options with stats\n        const { data: femaleUsers, error: femaleUsersError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").select(`\n        id,\n        full_name,\n        email,\n        age,\n        university,\n        profile_photo,\n        bio,\n        instagram,\n        created_at\n      `).eq(\"gender\", \"female\").order(\"created_at\", {\n            ascending: false\n        });\n        if (femaleUsersError) {\n            console.error(\"Error fetching female users:\", femaleUsersError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to fetch female users\"\n            }, {\n                status: 500\n            });\n        }\n        // Get female profile stats\n        const { data: femaleStats } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"female_profile_stats\").select(\"*\");\n        // Get assignments for all male users\n        const maleUserIds = maleUsers?.map((user)=>user.id) || [];\n        const { data: assignments } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").select(`\n        *,\n        female_user:users!profile_assignments_female_user_id_fkey (\n          id,\n          full_name,\n          profile_photo\n        )\n      `).in(\"male_user_id\", maleUserIds);\n        // Get temporary matches\n        const { data: tempMatches } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"temporary_matches\").select(`\n        *,\n        female_user:users!temporary_matches_female_user_id_fkey (\n          id,\n          full_name,\n          profile_photo\n        )\n      `).in(\"male_user_id\", maleUserIds);\n        // Get permanent matches  \n        const { data: permMatches } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"permanent_matches\").select(`\n        *,\n        female_user:users!permanent_matches_female_user_id_fkey (\n          id,\n          full_name,\n          profile_photo\n        )\n      `).in(\"male_user_id\", maleUserIds);\n        // Enhance male users with assignment data and round logic\n        const enhancedMaleUsers = maleUsers?.map((user)=>{\n            const userAssignments = assignments?.filter((a)=>a.male_user_id === user.id) || [];\n            const userTempMatch = tempMatches?.find((tm)=>tm.male_user_id === user.id);\n            const userPermMatch = permMatches?.find((pm)=>pm.male_user_id === user.id);\n            // Calculate assignment slots based on subscription and round\n            const getMaxAssignments = (subscription, round)=>{\n                if (subscription === \"premium\") {\n                    return round === 1 ? 2 : 3 // Round 1: 2 options, Round 2: 3 options\n                    ;\n                } else {\n                    return 1 // Basic: 1 option per round\n                    ;\n                }\n            };\n            const maxAssignments = getMaxAssignments(user.subscription_type, user.current_round);\n            const currentAssignments = userAssignments.filter((a)=>a.status === \"assigned\" && a.round_number === user.current_round).length;\n            const availableSlots = maxAssignments - currentAssignments;\n            // Check if user has selected a profile (timer active)\n            const selectedAssignment = userAssignments.find((a)=>a.is_selected === true && a.status === \"revealed\");\n            const hasActiveTimer = user.decision_timer_active && user.decision_timer_expires_at && new Date(user.decision_timer_expires_at) > new Date();\n            // Calculate time remaining if timer is active\n            let timeRemaining = null;\n            if (hasActiveTimer && user.decision_timer_expires_at) {\n                const expiresAt = new Date(user.decision_timer_expires_at).getTime();\n                const now = new Date().getTime();\n                timeRemaining = Math.max(0, expiresAt - now);\n            }\n            return {\n                ...user,\n                assignments: userAssignments,\n                assignedCount: currentAssignments,\n                revealedCount: userAssignments.filter((a)=>a.status === \"revealed\").length,\n                disengagedCount: userAssignments.filter((a)=>a.status === \"disengaged\").length,\n                maxAssignments,\n                availableSlots,\n                currentTempMatch: userTempMatch,\n                permanentMatch: userPermMatch,\n                selectedAssignment,\n                hasActiveTimer,\n                timeRemaining,\n                decisionExpiresAt: user.decision_timer_expires_at,\n                roundInfo: {\n                    current: user.current_round,\n                    round1Completed: user.round_1_completed,\n                    round2Completed: user.round_2_completed,\n                    canProgressToRound2: user.current_round === 1 && !user.round_1_completed && (userTempMatch || userPermMatch)\n                },\n                status: userPermMatch ? \"permanently_matched\" : userTempMatch ? \"temporary_match\" : selectedAssignment && hasActiveTimer ? \"deciding\" : currentAssignments > 0 ? \"assigned\" : \"waiting\"\n            };\n        });\n        // Enhance female users with assignment statistics from stats table\n        const enhancedFemaleUsers = femaleUsers?.map((female)=>{\n            const stats = femaleStats?.find((s)=>s.female_user_id === female.id);\n            const femaleAssignments = assignments?.filter((a)=>a.female_user_id === female.id) || [];\n            const femaleTempMatches = tempMatches?.filter((tm)=>tm.female_user_id === female.id) || [];\n            const femalePermMatches = permMatches?.filter((pm)=>pm.female_user_id === female.id) || [];\n            return {\n                ...female,\n                currentlyAssignedCount: stats?.currently_assigned_count || 0,\n                assignedCount: stats?.assigned_count || 0,\n                totalAssignedCount: stats?.total_assigned_count || 0,\n                selectedCount: stats?.selected_count || 0,\n                revealedCount: stats?.revealed_count || 0,\n                permanentMatchCount: femalePermMatches.length,\n                currentAssignments: femaleAssignments.filter((a)=>a.status === \"assigned\"),\n                currentTempMatches: femaleTempMatches.filter((tm)=>tm.status === \"active\"),\n                lastAssignedAt: stats?.last_assigned_at\n            };\n        });\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            maleUsers: enhancedMaleUsers || [],\n            femaleUsers: enhancedFemaleUsers || [],\n            totalMales: maleUsers?.length || 0,\n            totalFemales: femaleUsers?.length || 0,\n            statistics: {\n                premiumUsers: enhancedMaleUsers?.filter((u)=>u.subscription_type === \"premium\").length || 0,\n                basicUsers: enhancedMaleUsers?.filter((u)=>u.subscription_type === \"basic\").length || 0,\n                assignedUsers: enhancedMaleUsers?.filter((u)=>u.assignedCount > 0).length || 0,\n                waitingUsers: enhancedMaleUsers?.filter((u)=>u.status === \"waiting\").length || 0,\n                matchedUsers: enhancedMaleUsers?.filter((u)=>u.status === \"permanently_matched\").length || 0\n            }\n        });\n    } catch (error) {\n        console.error(\"Matches API error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { action, maleUserId, femaleUserId, data } = body;\n        console.log(\"Matches API POST action:\", action);\n        switch(action){\n            case \"assign_profile\":\n                return await assignProfile(maleUserId, femaleUserId, data?.round || 1);\n            case \"select_profile\":\n                return await selectProfile(maleUserId, femaleUserId);\n            case \"disengage_profile\":\n                return await disengageProfile(maleUserId, femaleUserId);\n            case \"confirm_match\":\n                return await confirmMatch(maleUserId, femaleUserId);\n            case \"progress_to_round_2\":\n                return await progressToRound2(maleUserId);\n            case \"clear_history\":\n                return await clearUserHistory(maleUserId);\n            default:\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"Invalid action\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"Matches API POST error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Helper functions for match operations\nasync function assignProfile(maleUserId, femaleUserId, round) {\n    try {\n        // Check if male user exists and get subscription details\n        const { data: maleUser, error: maleError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").select(\"subscription_type, current_round, round_1_completed, round_2_completed, decision_timer_active\").eq(\"id\", maleUserId).single();\n        if (maleError || !maleUser) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Male user not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Check if user has active timer (selected a profile already)\n        if (maleUser.decision_timer_active) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User has already selected a profile and timer is active. Cannot assign more profiles.\"\n            }, {\n                status: 400\n            });\n        }\n        // Determine max assignments based on subscription and round\n        const getMaxAssignments = (subscription, roundNum)=>{\n            if (subscription === \"premium\") {\n                return roundNum === 1 ? 2 : 3 // Round 1: 2 options, Round 2: 3 options\n                ;\n            } else {\n                return 1 // Basic: 1 option per round\n                ;\n            }\n        };\n        const maxAssignments = getMaxAssignments(maleUser.subscription_type, maleUser.current_round);\n        // Get current assignments for this user in current round\n        const { data: currentAssignments } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").select(\"*\").eq(\"male_user_id\", maleUserId).eq(\"round_number\", maleUser.current_round).eq(\"status\", \"assigned\");\n        if (currentAssignments && currentAssignments.length >= maxAssignments) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: `Maximum assignments reached for round ${maleUser.current_round}. ${maleUser.subscription_type} plan allows ${maxAssignments} assignments per round.`\n            }, {\n                status: 400\n            });\n        }\n        // Check if this female profile was already assigned to this male user before\n        const { data: previousAssignment } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").select(\"*\").eq(\"male_user_id\", maleUserId).eq(\"female_user_id\", femaleUserId).single();\n        if (previousAssignment) {\n            if (previousAssignment.status === \"disengaged\") {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"This female profile cannot be reassigned to this male user as he disengaged earlier.\"\n                }, {\n                    status: 400\n                });\n            } else if (previousAssignment.status === \"assigned\") {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"This female profile is already assigned to this male user.\"\n                }, {\n                    status: 400\n                });\n            }\n        }\n        // Create the assignment\n        const { data: assignment, error: assignError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").insert({\n            male_user_id: maleUserId,\n            female_user_id: femaleUserId,\n            status: \"assigned\",\n            round_number: maleUser.current_round,\n            assigned_at: new Date().toISOString()\n        }).select().single();\n        if (assignError) {\n            console.error(\"Assignment creation error:\", assignError);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to create assignment\"\n            }, {\n                status: 500\n            });\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            assignment,\n            message: `Profile assigned successfully for Round ${maleUser.current_round}`\n        });\n    } catch (error) {\n        console.error(\"Assign profile error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function selectProfile(maleUserId, femaleUserId) {\n    try {\n        // Get the assignment\n        const { data: assignment, error: assignmentError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").select(\"*\").eq(\"male_user_id\", maleUserId).eq(\"female_user_id\", femaleUserId).eq(\"status\", \"assigned\").single();\n        if (assignmentError || !assignment) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Assignment not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Check if user already has an active selection\n        const { data: existingSelection } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").select(\"*\").eq(\"male_user_id\", maleUserId).eq(\"is_selected\", true).eq(\"status\", \"revealed\").single();\n        if (existingSelection) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User already has an active selection\"\n            }, {\n                status: 400\n            });\n        }\n        // Start the 48-hour decision timer using database function\n        const { error: timerError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.rpc(\"start_decision_timer\", {\n            assignment_id: assignment.id\n        });\n        if (timerError) {\n            console.error(\"Timer start error:\", timerError);\n            // Fallback to manual timer start if function doesn't exist\n            const expiresAt = new Date();\n            expiresAt.setHours(expiresAt.getHours() + 48);\n            // Update assignment\n            await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").update({\n                is_selected: true,\n                selected_at: new Date().toISOString(),\n                timer_started_at: new Date().toISOString(),\n                timer_expires_at: expiresAt.toISOString(),\n                status: \"revealed\"\n            }).eq(\"id\", assignment.id);\n            // Update user\n            await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").update({\n                decision_timer_active: true,\n                decision_timer_started_at: new Date().toISOString(),\n                decision_timer_expires_at: expiresAt.toISOString(),\n                last_activity_at: new Date().toISOString()\n            }).eq(\"id\", maleUserId);\n            // Hide other assigned profiles\n            await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").update({\n                status: \"hidden\"\n            }).eq(\"male_user_id\", maleUserId).eq(\"status\", \"assigned\").neq(\"id\", assignment.id);\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"Profile selected! 48-hour decision timer started. Other profiles are now hidden.\"\n        });\n    } catch (error) {\n        console.error(\"Select profile error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function disengageProfile(maleUserId, femaleUserId) {\n    try {\n        // Update assignment status to disengaged\n        const { error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").update({\n            status: \"disengaged\",\n            disengaged_at: new Date().toISOString(),\n            is_selected: false\n        }).eq(\"male_user_id\", maleUserId).eq(\"female_user_id\", femaleUserId);\n        if (updateError) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to update assignment\"\n            }, {\n                status: 500\n            });\n        }\n        // Disable decision timer and reveal other profiles if any\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").update({\n            decision_timer_active: false,\n            decision_timer_expires_at: null,\n            decision_timer_started_at: null\n        }).eq(\"id\", maleUserId);\n        // Reveal hidden profiles back to assigned status\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").update({\n            status: \"assigned\"\n        }).eq(\"male_user_id\", maleUserId).eq(\"status\", \"hidden\");\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"Profile disengaged successfully. Other profiles are now visible again.\"\n        });\n    } catch (error) {\n        console.error(\"Disengage profile error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function progressToRound2(maleUserId) {\n    try {\n        // Get user current state\n        const { data: user, error: userError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").select(\"current_round, round_1_completed, subscription_type\").eq(\"id\", maleUserId).single();\n        if (userError || !user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User not found\"\n            }, {\n                status: 404\n            });\n        }\n        if (user.current_round !== 1) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"User is not in round 1\"\n            }, {\n                status: 400\n            });\n        }\n        // Update user to round 2\n        const { error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").update({\n            current_round: 2,\n            round_1_completed: true,\n            decision_timer_active: false,\n            decision_timer_expires_at: null,\n            decision_timer_started_at: null\n        }).eq(\"id\", maleUserId);\n        if (updateError) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to update user round\"\n            }, {\n                status: 500\n            });\n        }\n        // Disengage any active temporary matches from round 1\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"temporary_matches\").update({\n            status: \"disengaged\"\n        }).eq(\"male_user_id\", maleUserId).eq(\"status\", \"active\");\n        // Mark round 1 assignments as completed\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").update({\n            status: \"round_completed\"\n        }).eq(\"male_user_id\", maleUserId).eq(\"round_number\", 1).in(\"status\", [\n            \"assigned\",\n            \"revealed\",\n            \"hidden\"\n        ]);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"Successfully progressed to Round 2! User can now receive new assignments.\"\n        });\n    } catch (error) {\n        console.error(\"Progress to round 2 error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function requestRound2(maleUserId) {\n    try {\n        // Update user round information\n        const { error: updateError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").update({\n            round_2_requested: true,\n            round_2_requested_at: new Date().toISOString(),\n            current_round: 2,\n            decision_timer_active: false,\n            decision_timer_expires_at: null\n        }).eq(\"id\", maleUserId);\n        if (updateError) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to update user\"\n            }, {\n                status: 500\n            });\n        }\n        // Update temporary match status to disengaged\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"temporary_matches\").update({\n            status: \"disengaged\"\n        }).eq(\"male_user_id\", maleUserId).eq(\"status\", \"active\");\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"Round 2 requested successfully\"\n        });\n    } catch (error) {\n        console.error(\"Request round 2 error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function confirmMatch(maleUserId, femaleUserId) {\n    try {\n        // Create permanent match\n        const { data: permMatch, error: permError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"permanent_matches\").insert({\n            male_user_id: maleUserId,\n            female_user_id: femaleUserId,\n            status: \"active\"\n        }).select().single();\n        if (permError) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to create permanent match\"\n            }, {\n                status: 500\n            });\n        }\n        // Update user status\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").update({\n            permanent_match_id: permMatch.id,\n            match_confirmed_at: new Date().toISOString(),\n            decision_timer_active: false,\n            decision_timer_expires_at: null\n        }).eq(\"id\", maleUserId);\n        // Update temporary match status\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"temporary_matches\").update({\n            status: \"promoted\"\n        }).eq(\"male_user_id\", maleUserId).eq(\"status\", \"active\");\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            permMatch,\n            message: \"Match confirmed permanently\"\n        });\n    } catch (error) {\n        console.error(\"Confirm match error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function clearUserHistory(maleUserId) {\n    try {\n        // Delete all assignments\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"profile_assignments\").delete().eq(\"male_user_id\", maleUserId);\n        // Delete temporary matches\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"temporary_matches\").delete().eq(\"male_user_id\", maleUserId);\n        // Delete permanent matches\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"permanent_matches\").delete().eq(\"male_user_id\", maleUserId);\n        // Reset user data\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabaseAdmin.from(\"users\").update({\n            current_round: 1,\n            round_1_completed: false,\n            round_2_completed: false,\n            decision_timer_active: false,\n            decision_timer_expires_at: null,\n            decision_timer_started_at: null,\n            temp_match_id: null,\n            permanent_match_id: null,\n            match_confirmed_at: null,\n            last_activity_at: new Date().toISOString()\n        }).eq(\"id\", maleUserId);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            message: \"User history cleared successfully. User reset to Round 1.\"\n        });\n    } catch (error) {\n        console.error(\"Clear history error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/admin/matches/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/main/index.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\nconst supabaseUrl = \"https://xdhtrwaghahigmbojotu.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhkaHRyd2FnaGFoaWdtYm9qb3R1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU5Njk1OTYsImV4cCI6MjA3MTU0NTU5Nn0.ItDXVqjGSI-DaRCCbTCiWbopMnhXLGQiA3DMgBEzS4s\";\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\nif (!supabaseUrl) {\n    throw new Error(\"Missing NEXT_PUBLIC_SUPABASE_URL environment variable\");\n}\nif (!supabaseAnonKey) {\n    throw new Error(\"Missing NEXT_PUBLIC_SUPABASE_ANON_KEY environment variable\");\n}\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Service role client for admin operations (use only on server-side)\nconst supabaseAdmin = (()=>{\n    if (!supabaseServiceKey) {\n        console.warn(\"SUPABASE_SERVICE_ROLE_KEY not found, some admin operations may not work\");\n        // Return regular client as fallback\n        return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n        auth: {\n            autoRefreshToken: false,\n            persistSession: false\n        }\n    });\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fadmin%2Fmatches%2Froute&page=%2Fapi%2Fadmin%2Fmatches%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fadmin%2Fmatches%2Froute.ts&appDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Faman%2FDesktop%2Fcufy_3.1v-1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();